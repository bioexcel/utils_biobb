<tool id="biobb_cp2k_cp2k_prep_ext" name="Cp2kPrep" version="4.2.0" >
    <description>: Helper bb to prepare inputs for the CP2K QM tool module.</description>
    <requirements>
        <requirement type="package"
        version="4.2.0"
        >biobb_cp2k</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_inp_path} ${input_inp_path}_`echo $$`.${input_inp_path.ext};
        
          ln -f -s ${input_pdb_path} ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          ln -f -s ${input_rst_path} ${input_rst_path}_`echo $$`.${input_rst_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if

        cp2k_prep

        #if $config.sele == "option1":
            --config ${config.properties}_`echo $$`.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__simulation_type__dq__:__dq__${properties.simulation_type}__dq__,__dq__cp2k_in__dq__:${properties.cp2k_in},__dq__cell_cutoff__dq__:${properties.cell_cutoff}__cc__'
          #end if
        
          #if str($input_inp_path) != 'None':
            --input_inp_path ${input_inp_path}_`echo $$`.${input_inp_path.ext}
          #end if
        
          #if str($input_pdb_path) != 'None':
            --input_pdb_path ${input_pdb_path}_`echo $$`.${input_pdb_path.ext}
          #end if
        
          #if str($input_rst_path) != 'None':
            --input_rst_path ${input_rst_path}_`echo $$`.${input_rst_path.ext}
          #end if
        
        
          --output_inp_path $outname_output_inp_path
        ;
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_inp_path}_`echo $$`.${input_inp_path.ext};
        
          rm -f ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          rm -f ${input_rst_path}_`echo $$`.${input_rst_path.ext};
        
        
          if test -f $outname_output_inp_path; then mv $outname_output_inp_path $output_inp_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_inp_path" type="data" format="pdb"  optional="True" label="input PDB file" help="Input configuration file (CP2K run options). Format: [input].pdb"/>
        
          <param name="input_pdb_path" type="data" format="pdb"  optional="True" label="input PDB file" help="Input PDB file. Format: [input].pdb"/>
        
          <param name="input_rst_path" type="data" format="wfn"  optional="True" label="input WFN file" help="Input restart file (WFN). Format: [input].wfn"/>
        
        
          <param name="outname_output_inp_path" type="text" value="mycp2k_prep.inp"
              optional="False" label="output INP,IN,TXT name"
              help="Output CP2K input configuration file Format: [output].[format] "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="simulation_type" type="select" label="simulation_type" help="Default options for the cp2k_in file. Each creates a different inp file. " multiple="false">
                  
                    <option value="energy"
                      selected="true"
                    >energy
                       - Computes Energy and Forces
                    </option>
                  
                    <option value="geom_opt"
                      
                    >geom_opt
                       - Runs a geometry optimization
                    </option>
                  
                    <option value="md"
                      
                    >md
                       - Runs an MD calculation
                    </option>
                  
                    <option value="mp2"
                      
                    >mp2
                       - Runs an MP2 calculation
                    </option>
                  
                </param>
            
              <param name="cp2k_in" type="text" label="cp2k_in" help="CP2K run options specification. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="cell_cutoff" type="float"
                  value="5.0"
                  
                  label="cell_cutoff" help="CP2K cell cutoff, to build the cell around the system (only used if input_pdb_path is defined)." optional="false"/>
            
              <param name="output_format" type="select" label="output_format" help="Format of the output file" multiple="false">
                  
                    <option value="inp"
                      
                    >inp
                       
                    </option>
                  
                    <option value="in"
                      
                    >in
                       
                    </option>
                  
                    <option value="txt"
                      
                    >txt
                       
                    </option>
                  
                </param>
            
          </section>
    </inputs>
    <outputs>
        
        <data name="output_inp_path" format="text" label="${outname_output_inp_path}">
            <change_format>
            
            <when input="properties.output_format" value="inp" format="inp" />
            
            <when input="properties.output_format" value="in" format="in" />
            
            <when input="properties.output_format" value="txt" format="txt" />
            
            </change_format>
          </data>
        
    </outputs>
    <tests>
        <test>
          <param name="sele" value="option1"/>
          <param name="properties" value="data/config/config_editconf.json"/>
        </test>
    </tests>
    <help>
.. class:: infomark

Check the syntax for the tool parameters at the original library documentation: https://biobb_cp2k.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png
    :width: 150

**https://mmb.irbbarcelona.org/biobb**

.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150

**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_cp2k},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>