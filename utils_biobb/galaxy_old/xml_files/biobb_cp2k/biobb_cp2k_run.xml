<tool id="biobb_cp2k_cp2k_run_ext" name="Cp2kRun" version="4.2.0" >
    <description>: Wrapper of the CP2K QM tool module.</description>
    <requirements>
        <requirement type="package"
        version="4.2.0"
        >biobb_cp2k</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_inp_path} ${input_inp_path}_`echo $$`.${input_inp_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if

        cp2k_run

        #if $config.sele == "option1":
            --config ${config.properties}_`echo $$`.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__binary_path__dq__:__dq__${properties.binary_path}__dq__,__dq__param_path__dq__:__dq__${properties.param_path}__dq__,__dq__mpi_bin__dq__:__dq__${properties.mpi_bin}__dq__,__dq__mpi_np__dq__:${properties.mpi_np},__dq__mpi_flags__dq__:__dq__${properties.mpi_flags}__dq____cc__'
          #end if
        
          #if str($input_inp_path) != 'None':
            --input_inp_path ${input_inp_path}_`echo $$`.${input_inp_path.ext}
          #end if
        
        
          --output_log_path $outname_output_log_path
        
          --output_outzip_path $outname_output_outzip_path
        
          --output_rst_path $outname_output_rst_path
        ;
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_inp_path}_`echo $$`.${input_inp_path.ext};
        
        
          if test -f $outname_output_log_path; then mv $outname_output_log_path $output_log_path; fi;
        
          if test -f $outname_output_outzip_path; then mv $outname_output_outzip_path $output_outzip_path; fi;
        
          if test -f $outname_output_rst_path; then mv $outname_output_rst_path $output_rst_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_inp_path" type="data" format="inp,in,txt,wfn"  optional="False" label="input INP,IN,TXT,WFN file" help="Input configuration file (CP2K run options). Format: [input].[format]"/>
        
        
          <param name="outname_output_log_path" type="text" value="mycp2k_run.log"
              optional="False" label="output LOG,OUT,TXT,O name"
              help="Output log file Format: [output].[format] "/>
        
          <param name="outname_output_outzip_path" type="text" value="mycp2k_run.zip"
              optional="False" label="output ZIP,GZIP,GZ name"
              help="Output files Format: [output].[format] "/>
        
          <param name="outname_output_rst_path" type="text" value="mycp2k_run.wfn"
              optional="False" label="output WFN name"
              help="Output restart file Format: [output].wfn "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="binary_path" type="text" label="binary_path" help="CP2K binary path to be used." optional="false"
                  value="cp2k.sopt"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="param_path" type="text" label="param_path" help="Path to the CP2K parameter data files (BASIS_SET, POTENTIALS, etc.). If not provided, the parameter data files included in the package will be used." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="mpi_bin" type="text" label="mpi_bin" help="Path to the MPI runner. Usually &#34;mpirun&#34; or &#34;srun&#34;." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="mpi_np" type="integer"
                  value="0"
                  
                  label="mpi_np" help="Number of MPI processes. Usually an integer bigger than 1." optional="true"/>
            
              <param name="mpi_flags" type="text" label="mpi_flags" help="Path to the MPI hostlist file." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="output_log_path_format" type="select" label="output_log_path_format" help="Format of the output file" multiple="false">
                  
                    <option value="log"
                      
                    >log
                       
                    </option>
                  
                    <option value="out"
                      
                    >out
                       
                    </option>
                  
                    <option value="txt"
                      
                    >txt
                       
                    </option>
                  
                    <option value="o"
                      
                    >o
                       
                    </option>
                  
                </param>
            
              <param name="output_outzip_path_format" type="select" label="output_outzip_path_format" help="Format of the output file" multiple="false">
                  
                    <option value="zip"
                      
                    >zip
                       
                    </option>
                  
                    <option value="gzip"
                      
                    >gzip
                       
                    </option>
                  
                    <option value="gz"
                      
                    >gz
                       
                    </option>
                  
                </param>
            
          </section>
    </inputs>
    <outputs>
        
        <data name="output_log_path" format="text" label="${outname_output_log_path}">
            <change_format>
            
            <when input="properties.output_log_path_format" value="log" format="log" />
            
            <when input="properties.output_log_path_format" value="out" format="out" />
            
            <when input="properties.output_log_path_format" value="txt" format="txt" />
            
            <when input="properties.output_log_path_format" value="o" format="o" />
            
            </change_format>
          </data>
        
        <data name="output_outzip_path" format="text" label="${outname_output_outzip_path}">
            <change_format>
            
            <when input="properties.output_outzip_path_format" value="zip" format="zip" />
            
            <when input="properties.output_outzip_path_format" value="gzip" format="gzip" />
            
            <when input="properties.output_outzip_path_format" value="gz" format="gz" />
            
            </change_format>
          </data>
        
        
          <data name="output_rst_path" format="wfn" label="${outname_output_rst_path}"/>
        
    </outputs>
    <tests>
        <test>
          <param name="sele" value="option1"/>
          <param name="properties" value="data/config/config_editconf.json"/>
        </test>
    </tests>
    <help>
.. class:: infomark

Check the syntax for the tool parameters at the original library documentation: https://biobb_cp2k.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png
    :width: 150

**https://mmb.irbbarcelona.org/biobb**

.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150

**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_cp2k},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>