<tool id="biobb_dna_biobb_canal_ext" name="BiobbCanal" version="3.9.0" >
    <description>: Wrapper for the Canal executable that is part of the Curves+ software suite.</description>
    <requirements>
        <requirement type="package"
        version="3.9.0"
        >biobb_dna</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_cda_file} ${input_cda_file}_`echo $$`.${input_cda_file.ext};
        
          ln -f -s ${input_lis_file} ${input_lis_file}_`echo $$`.${input_lis_file.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        biobb_canal

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__bases__dq__:__dq__${properties.bases}__dq__,__dq__itst__dq__:${properties.itst},__dq__itnd__dq__:${properties.itnd},__dq__itdel__dq__:${properties.itdel},__dq__lev1__dq__:${properties.lev1},__dq__lev2__dq__:${properties.lev2},__dq__nastr__dq__:__dq__${properties.nastr}__dq__,__dq__cormin__dq__:${properties.cormin},__dq__series__dq__:__dq__${properties.series}__dq__,__dq__histo__dq__:__dq__${properties.histo}__dq__,__dq__corr__dq__:__dq__${properties.corr}__dq__,__dq__sequence__dq__:__dq__${properties.sequence}__dq__,__dq__binary_path__dq__:__dq__${properties.binary_path}__dq____cc__'
          #end if
        
          #if str($input_cda_file) != 'None':
            --input_cda_file ${input_cda_file}_`echo $$`.${input_cda_file.ext}
          #end if
        
          #if str($input_lis_file) != 'None':
            --input_lis_file ${input_lis_file}_`echo $$`.${input_lis_file.ext}
          #end if
        
        
          --output_zip_path $outname_output_zip_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_cda_file}_`echo $$`.${input_cda_file.ext};
        
          rm -f ${input_lis_file}_`echo $$`.${input_lis_file.ext};
        
        
          if test -f $outname_output_zip_path; then mv $outname_output_zip_path $output_zip_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_cda_file" type="data" format="cda"  optional="False" label="input CDA file" help="Input cda file, from Cur+ output. Format: [input].cda"/> 
        
          <param name="input_lis_file" type="data" format="lis"  optional="True" label="input LIS file" help="Input lis file, from Cur+ output. Format: [input].lis"/> 
        
        
          <param name="outname_output_zip_path" type="text" value="mybiobb_canal.zip" 
              optional="False" label="output ZIP name" 
              help="zip filename for output files Format: [output].zip "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="bases" type="text" label="bases" help="sequence of bases to be searched for in the I/P data (default is blank, meaning no specified sequence)." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="itst" type="integer" 
                  value="0"
                  
                  label="itst" help="Iteration start index." optional="true"/>
            
              <param name="itnd" type="integer" 
                  value="0"
                  
                  label="itnd" help="Iteration end index." optional="true"/>
            
              <param name="itdel" type="integer" 
                  value="1"
                  
                  label="itdel" help="Iteration delimiter." optional="false"/>
            
              <param name="lev1" type="integer" 
                  value="0"
                  
                  label="lev1" help="Lower base level limit (i.e. base pairs) used for analysis." optional="true"/>
            
              <param name="lev2" type="integer" 
                  value="0"
                  
                  label="lev2" help="Upper base level limit used for analysis. If lev1 &gt; 0 and lev2 = 0, lev2 is set to lev1 (i.e. analyze lev1 only). If lev1=lev2=0, lev1 is set to 1 and lev2 is set to the length of the oligmer (i.e. analyze all levels)." optional="true"/>
            
              <param name="nastr" type="text" label="nastr" help="character string used to indicate missing data in .ser files." optional="false"
                  value="NA"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="cormin" type="float" 
                  value="0.6"
                  
                  label="cormin" help="minimal absolute value for printing linear correlation coefficients between pairs of analyzed variables." optional="false"/>
            
              <param name="series" type="text" label="series" help="if True then output spatial or time series data. Only possible for the analysis of single structures or single trajectories." optional="false"
                  value="False"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="histo" type="text" label="histo" help="if True then output histogram data." optional="false"
                  value="False"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="corr" type="text" label="corr" help="if True than output linear correlation coefficients between all variables." optional="false"
                  value="False"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="sequence" type="text" label="sequence" help="sequence of the first strand of the corresponding DNA fragment, for each .cda file. If not given it will be parsed from .lis file." optional="false"
                  value="Optional"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="binary_path" type="text" label="binary_path" help="Path to Canal executable, otherwise the program wil look for Canal executable in the binaries folder." optional="false"
                  value="Canal"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_zip_path" format="zip" label="${outname_output_zip_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_dna.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_dna},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>