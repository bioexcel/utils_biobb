<tool id="biobb_dna_intrahpcorr_ext" name="Intrahpcorr" version="3.7.1" >
    <description>: Calculate correlation between helical parameters for a single intra-base pair.</description>
    <requirements>
        <requirement type="package"
        version="3.7.1"
        >biobb_dna</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_filename_shear} ${input_filename_shear}.${input_filename_shear.ext};
        
          ln -f -s ${input_filename_stretch} ${input_filename_stretch}.${input_filename_stretch.ext};
        
          ln -f -s ${input_filename_stagger} ${input_filename_stagger}.${input_filename_stagger.ext};
        
          ln -f -s ${input_filename_buckle} ${input_filename_buckle}.${input_filename_buckle.ext};
        
          ln -f -s ${input_filename_propel} ${input_filename_propel}.${input_filename_propel.ext};
        
          ln -f -s ${input_filename_opening} ${input_filename_opening}.${input_filename_opening.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
          #end if
        
        intrahpcorr

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config "__oc____dq__base__dq__:__dq__${properties.base}__dq____cc__"
          #end if
        
          #if str($input_filename_shear) != 'None':
            --input_filename_shear ${input_filename_shear}.${input_filename_shear.ext}
          #end if
        
          #if str($input_filename_stretch) != 'None':
            --input_filename_stretch ${input_filename_stretch}.${input_filename_stretch.ext}
          #end if
        
          #if str($input_filename_stagger) != 'None':
            --input_filename_stagger ${input_filename_stagger}.${input_filename_stagger.ext}
          #end if
        
          #if str($input_filename_buckle) != 'None':
            --input_filename_buckle ${input_filename_buckle}.${input_filename_buckle.ext}
          #end if
        
          #if str($input_filename_propel) != 'None':
            --input_filename_propel ${input_filename_propel}.${input_filename_propel.ext}
          #end if
        
          #if str($input_filename_opening) != 'None':
            --input_filename_opening ${input_filename_opening}.${input_filename_opening.ext}
          #end if
        
        
          --output_csv_path $__new_file_path__/$outname_output_csv_path
        
          --output_jpg_path $__new_file_path__/$outname_output_jpg_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}.${config.properties.ext};
          #end if
        
          rm -f ${input_filename_shear}.${input_filename_shear.ext};
        
          rm -f ${input_filename_stretch}.${input_filename_stretch.ext};
        
          rm -f ${input_filename_stagger}.${input_filename_stagger.ext};
        
          rm -f ${input_filename_buckle}.${input_filename_buckle.ext};
        
          rm -f ${input_filename_propel}.${input_filename_propel.ext};
        
          rm -f ${input_filename_opening}.${input_filename_opening.ext};
        
        
          if test -f $__new_file_path__/$outname_output_csv_path; then mv $__new_file_path__/$outname_output_csv_path $output_csv_path; fi;
        
          if test -f $__new_file_path__/$outname_output_jpg_path; then mv $__new_file_path__/$outname_output_jpg_path $output_jpg_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_filename_shear" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;shear&#39;. Format: [input].csv"/> 
        
          <param name="input_filename_stretch" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;stretch&#39;. Format: [input].csv"/> 
        
          <param name="input_filename_stagger" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;stagger&#39;. Format: [input].csv"/> 
        
          <param name="input_filename_buckle" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;buckle&#39;. Format: [input].csv"/> 
        
          <param name="input_filename_propel" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;propeller&#39;. Format: [input].csv"/> 
        
          <param name="input_filename_opening" type="data" format="csv"  optional="False" label="input CSV file" help="Path to .csv file with data for helical parameter &#39;opening&#39;. Format: [input].csv"/> 
        
        
          <param name="outname_output_csv_path" type="text" value="myintrahpcorr.csv" 
              optional="False" label="output CSV name" 
              help="Path to directory where output is saved Format: [output].csv "/>
        
          <param name="outname_output_jpg_path" type="text" value="myintrahpcorr.jpg" 
              optional="False" label="output JPG name" 
              help="Path to .jpg file where output is saved Format: [output].jpg "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="base" type="text" label="base" help="Name of base analyzed." optional="true"
                  
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                />
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_csv_path" format="csv" label="${outname_output_csv_path}"/>
        
        
          <data name="output_jpg_path" format="jpg" label="${outname_output_jpg_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_dna.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_dna},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>