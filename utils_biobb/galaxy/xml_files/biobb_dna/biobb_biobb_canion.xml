<tool id="biobb_dna_biobb_canion_ext" name="BiobbCanion" version="3.8.2" >
    <description>: Wrapper for the Canion executable  that is part of the Curves+ software suite.</description>
    <requirements>
        <requirement type="package"
        version="3.8.2"
        >biobb_dna</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_cdi_path} ${input_cdi_path}_`echo $$`.${input_cdi_path.ext};
        
          ln -f -s ${input_afr_path} ${input_afr_path}_`echo $$`.${input_afr_path.ext};
        
          ln -f -s ${input_avg_struc_path} ${input_avg_struc_path}_`echo $$`.${input_avg_struc_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        biobb_canion

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__bases__dq__:__dq__${properties.bases}__dq__,__dq__type__dq__:__dq__${properties.type}__dq__,__dq__dlow__dq__:${properties.dlow},__dq__dhig__dq__:${properties.dhig},__dq__rlow__dq__:${properties.rlow},__dq__rhig__dq__:${properties.rhig},__dq__alow__dq__:${properties.alow},__dq__ahig__dq__:${properties.ahig},__dq__itst__dq__:${properties.itst},__dq__itnd__dq__:${properties.itnd},__dq__itdel__dq__:${properties.itdel},__dq__rmsf__dq__:${properties.rmsf},__dq__circ__dq__:${properties.circ},__dq__binary_path__dq__:__dq__${properties.binary_path}__dq____cc__'
          #end if
        
          #if str($input_cdi_path) != 'None':
            --input_cdi_path ${input_cdi_path}_`echo $$`.${input_cdi_path.ext}
          #end if
        
          #if str($input_afr_path) != 'None':
            --input_afr_path ${input_afr_path}_`echo $$`.${input_afr_path.ext}
          #end if
        
          #if str($input_avg_struc_path) != 'None':
            --input_avg_struc_path ${input_avg_struc_path}_`echo $$`.${input_avg_struc_path.ext}
          #end if
        
        
          --output_zip_path $outname_output_zip_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_cdi_path}_`echo $$`.${input_cdi_path.ext};
        
          rm -f ${input_afr_path}_`echo $$`.${input_afr_path.ext};
        
          rm -f ${input_avg_struc_path}_`echo $$`.${input_avg_struc_path.ext};
        
        
          if test -f $outname_output_zip_path; then mv $outname_output_zip_path $output_zip_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_cdi_path" type="data" format="cdi"  optional="False" label="input CDI file" help="Trajectory input file. Format: [input].cdi"/> 
        
          <param name="input_afr_path" type="data" format="afr"  optional="False" label="input AFR file" help="Helical axis frames corresponding to the input conformation to be analyzed. Format: [input].afr"/> 
        
          <param name="input_avg_struc_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Average DNA conformation. Format: [input].pdb"/> 
        
        
          <param name="outname_output_zip_path" type="text" value="mybiobb_canion.zip" 
              optional="True" label="output ZIP name" 
              help="Filename for .zip files containing Canion output files Format: [output].zip "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="bases" type="text" label="bases" help="Sequence of bases to be analyzed (default is blank, meaning no specified sequence)." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="type" type="text" label="type" help="Ions (or atoms) to be analyzed. Options are &#39;Na+&#39;, &#39;K&#39;, &#39;K+&#39;, &#39;Cl&#39;, &#39;Cl-&#39;, &#39;CL&#39;, &#39;P&#39;, &#39;C1*&#39;, &#39;NH1&#39;, &#39;NH2&#39;, &#39;NZ&#39;, &#39;1&#39; for all cations, &#39;-1&#39; for all anions, &#39;0&#39; for neutral species or &#39;*&#39; for all available data." optional="false"
                  value="*"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="dlow" type="float" 
                  value="0.0"
                  
                  label="dlow" help="Select starting segment of the oglimer to analyze. If both dhig and dlow are 0, entire oglimer is analyzed." optional="true"/>
            
              <param name="dhig" type="float" 
                  value="0.0"
                  
                  label="dhig" help="Select ending segment of the oglimer to analyze, being the maximum value the total number of base pairs in the oligomer. If both dhig and dlow are 0, entire oglimer is analyzed." optional="true"/>
            
              <param name="rlow" type="float" 
                  value="0.0"
                  
                  label="rlow" help="Minimal distances from the helical axis taken into account in the analysis." optional="true"/>
            
              <param name="rhig" type="float" 
                  value="0.0"
                  
                  label="rhig" help="Maximal distances from the helical axis taken into account in the analysis." optional="true"/>
            
              <param name="alow" type="float" 
                  value="0.0"
                  
                  label="alow" help="Minimal angle range to analyze." optional="true"/>
            
              <param name="ahig" type="float" 
                  value="360.0"
                  
                  label="ahig" help="Maximal angle range to analyze." optional="false"/>
            
              <param name="itst" type="integer" 
                  
                  
                  label="itst" help="Number of first snapshot to be analyzed." optional="true"/>
            
              <param name="itnd" type="integer" 
                  
                  
                  label="itnd" help="Number of last snapshot to be analyzed." optional="true"/>
            
              <param name="itdel" type="integer" 
                  
                  
                  label="itdel" help="Spacing between analyzed snapshots." optional="true"/>
            
              <param name="rmsf" type="boolean" 
                  
                  label="rmsf" help="If set to True uses the combination of the helical ion parameters and an average helical axis to map the ions into Cartesian space and then calculates their average position (pdb output) and their root mean square fluctuation values (rmsf output). A single pass rmsf algorithm to make this calculation possible with a single read of the trajectory file. This option is generally used for solute atoms and not for solvent molecules or ions." 
                />
            
              <param name="circ" type="boolean" 
                  
                  label="circ" help="If set to True, minicircles are analyzed." 
                />
            
              <param name="binary_path" type="text" label="binary_path" help="Path to Canion executable, otherwise the program wil look for Canion executable in the binaries folder." optional="false"
                  value="Canion"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_zip_path" format="zip" label="${outname_output_zip_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_dna.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_dna},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>