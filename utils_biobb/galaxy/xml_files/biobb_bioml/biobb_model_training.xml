<tool id="biobb_bioml_model_training_ext" name="ModelTraining" version="0.1" >
    <description>: Wrapper class for the bioml Model training module.</description>
    <requirements>
        <requirement type="package"
        version="0.1"
        >biobb_bioml</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_excel} ${input_excel}_`echo $$`.${input_excel.ext};
        
          ln -f -s ${label} ${label}_`echo $$`.${label.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        model_training

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__num_thread__dq__:${properties.num_thread},__dq__scaler__dq__:__dq__${properties.scaler}__dq__,__dq__kfold_parameters__dq__:__dq__${properties.kfold_parameters}__dq__,__dq__outliers__dq__:__dq__${properties.outliers}__dq__,__dq__precision_weight__dq__:${properties.precision_weight},__dq__recall_weight__dq__:${properties.recall_weight},__dq__class0_weight__dq__:${properties.class0_weight},__dq__report_weight__dq__:${properties.report_weight},__dq__difference_weight__dq__:${properties.difference_weight},__dq__small__dq__:__dq__${properties.small}__dq____cc__'
          #end if
        
          #if str($input_excel) != 'None':
            --input_excel ${input_excel}_`echo $$`.${input_excel.ext}
          #end if
        
          #if str($label) != 'None':
            --label ${label}_`echo $$`.${label.ext}
          #end if
        
        
          --hyperparameters $outname_hyperparameters
        
          --training_output $outname_training_output
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_excel}_`echo $$`.${input_excel.ext};
        
          rm -f ${label}_`echo $$`.${label.ext};
        
        
          if test -f $outname_hyperparameters; then mv $outname_hyperparameters $hyperparameters; fi;
        
          if test -f $outname_training_output; then mv $outname_training_output $training_output; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_excel" type="data" format="xlsx"  optional="False" label="input XLSX file" help="The file to where the selected features are saved in excel format. Format: [input].xlsx"/> 
        
          <param name="label" type="data" format="csv"  optional="False" label="input CSV file" help="The path to the labels of the training set in a csv format. Format: [input].csv"/> 
        
        
          <param name="outname_hyperparameters" type="text" value="mymodel_training.xlsx" 
              optional="False" label="output XLSX name" 
              help="The path to the hyperparameters of the training set in a csv format Format: [output].xlsx "/>
        
          <param name="outname_training_output" type="text" value="mymodel_training.ZIP" 
              optional="False" label="output ZIP name" 
              help="(&#34;training_results&#34;) The zip where to save the models training results Format: [output].ZIP "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="num_thread" type="integer" 
                  value="50"
                  
                  label="num_thread" help="The number of threads to search for the hyperparameter space." optional="false"/>
            
              <param name="scaler" type="text" label="scaler" help="&#34;Choose one of the scaler available in scikit-learn, defaults to RobustScaler. Option: (&#34;robust&#34;, &#34;standard&#34;, &#34;minmax&#34;)." optional="false"
                  value="robust"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="kfold_parameters" type="text" label="kfold_parameters" help="The parameters for the kfold in num_split:test_size format." optional="false"
                  value="5:0.2"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="outliers" type="text" label="outliers" help="A list of outliers if any, the name should be the same as in the excel file with the filtered features, you can also specify the path to a file in plain text format, each record should be in a new line." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="precision_weight" type="float" 
                  value="1.0"
                  
                  label="precision_weight" help="Weights to specify how relevant is the precision for the ranking of the different features." optional="false"/>
            
              <param name="recall_weight" type="float" 
                  value="0.8"
                  
                  label="recall_weight" help="Weights to specify how relevant is the recall for the ranking of the different features." optional="false"/>
            
              <param name="class0_weight" type="float" 
                  value="0.5"
                  
                  label="class0_weight" help="Weights to specify how relevant is the f1, precision and recall scores of the class 0 or the negative class for the ranking of the different features with respect to class 1 or the positive class." optional="false"/>
            
              <param name="report_weight" type="float" 
                  value="0.25"
                  
                  label="report_weight" help="Weights to specify how relevant is the f1, precision and recall for the ranking of the different features with respect to MCC which is a more general measures of the performance of a model." optional="false"/>
            
              <param name="difference_weight" type="float" 
                  value="1.1"
                  
                  label="difference_weight" help="How important is to have similar training and test metrics." optional="false"/>
            
              <param name="small" type="text" label="small" help="Default to true, if the number of samples is &lt; 300 or if you machine is slow. The hyperparameters tuning will fail if you set trial time short and your machine is slow." optional="true"
                  
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="hyperparameters" format="xlsx" label="${outname_hyperparameters}"/>
        
        
          <data name="training_output" format="ZIP" label="${outname_training_output}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_bioml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_bioml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>