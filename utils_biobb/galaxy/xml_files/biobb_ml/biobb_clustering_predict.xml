<tool id="biobb_ml_clustering_predict_ext" name="ClusteringPredict" version="3.7.0" >
    <description>: Makes predictions from an input dataset and a given clustering model.</description>
    <requirements>
        <requirement type="package"
        version="3.7.0"
        >biobb_ml</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_model_path} ${input_model_path}_`echo $$`.${input_model_path.ext};
        
          ln -f -s ${input_dataset_path} ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        clustering_predict

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__predictions__dq__:${properties.predictions}__cc__'
          #end if
        
          #if str($input_model_path) != 'None':
            --input_model_path ${input_model_path}_`echo $$`.${input_model_path.ext}
          #end if
        
          #if str($input_dataset_path) != 'None':
            --input_dataset_path ${input_dataset_path}_`echo $$`.${input_dataset_path.ext}
          #end if
        
        
          --output_results_path $__new_file_path__/$outname_output_results_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_model_path}_`echo $$`.${input_model_path.ext};
        
          rm -f ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        
          if test -f $__new_file_path__/$outname_output_results_path; then mv $__new_file_path__/$outname_output_results_path $output_results_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_model_path" type="data" format="pkl"  optional="False" label="input PKL file" help="Path to the input model. Format: [input].pkl"/> 
        
          <param name="input_dataset_path" type="data" format="csv"  optional="True" label="input CSV file" help="Path to the dataset to predict. Format: [input].csv"/> 
        
        
          <param name="outname_output_results_path" type="text" value="myclustering_predict.csv" 
              optional="False" label="output CSV name" 
              help="Path to the output results file Format: [output].csv "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="predictions" type="text" label="predictions" help="List of dictionaries with all values you want to predict targets. It will be taken into account only in case **input_dataset_path** is not provided. Format: [{ &#39;var1&#39;: 1.0, &#39;var2&#39;: 2.0 }, { &#39;var1&#39;: 4.0, &#39;var2&#39;: 2.7 }] for datasets with headers and [[ 1.0, 2.0 ], [ 4.0, 2.7 ]] for datasets without headers. (Json)" value="[]" >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_results_path" format="csv" label="${outname_output_results_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_ml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_ml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>