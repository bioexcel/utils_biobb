<tool id="biobb_ml_support_vector_machine_ext" name="SupportVectorMachine" version="3.8.0" >
    <description>: Wrapper of the scikit-learn SupportVectorMachine method.</description>
    <requirements>
        <requirement type="package"
        version="3.8.0"
        >biobb_ml</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_dataset_path} ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        support_vector_machine

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__independent_vars__dq__:${properties.independent_vars},__dq__target__dq__:${properties.target},__dq__weight__dq__:${properties.weight},__dq__kernel__dq__:__dq__${properties.kernel}__dq__,__dq__normalize_cm__dq__:${properties.normalize_cm},__dq__random_state_method__dq__:${properties.random_state_method},__dq__random_state_train_test__dq__:${properties.random_state_train_test},__dq__test_size__dq__:${properties.test_size},__dq__scale__dq__:${properties.scale}__cc__'
          #end if
        
          #if str($input_dataset_path) != 'None':
            --input_dataset_path ${input_dataset_path}_`echo $$`.${input_dataset_path.ext}
          #end if
        
        
          --output_model_path $outname_output_model_path
        
          --output_test_table_path $outname_output_test_table_path
        
          --output_plot_path $outname_output_plot_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        
          if test -f $outname_output_model_path; then mv $outname_output_model_path $output_model_path; fi;
        
          if test -f $outname_output_test_table_path; then mv $outname_output_test_table_path $output_test_table_path; fi;
        
          if test -f $outname_output_plot_path; then mv $outname_output_plot_path $output_plot_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_dataset_path" type="data" format="csv"  optional="False" label="input CSV file" help="Path to the input dataset. Format: [input].csv"/> 
        
        
          <param name="outname_output_model_path" type="text" value="mysupport_vector_machine.pkl" 
              optional="False" label="output PKL name" 
              help="Path to the output model file Format: [output].pkl "/>
        
          <param name="outname_output_test_table_path" type="text" value="mysupport_vector_machine.csv" 
              optional="True" label="output CSV name" 
              help="Path to the test table file Format: [output].csv "/>
        
          <param name="outname_output_plot_path" type="text" value="mysupport_vector_machine.png" 
              optional="True" label="output PNG name" 
              help="Path to the statistics plot. If target is binary it shows confusion matrix, distributions of the predicted probabilities of both classes and ROC curve. If target is non-binary it shows confusion matrix Format: [output].png "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="independent_vars" type="text" label="independent_vars" help="Independent variables you want to train from your dataset. You can specify either a list of columns names from your input dataset, a list of columns indexes or a range of columns indexes. Formats: { &#34;columns&#34;: [&#34;column1&#34;, &#34;column2&#34;] } or { &#34;indexes&#34;: [0, 2, 3, 10, 11, 17] } or { &#34;range&#34;: [[0, 20], [50, 102]] }. In case of mulitple formats, the first one will be picked. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="target" type="text" label="target" help="Dependent variable you want to predict from your dataset. You can specify either a column name or a column index. Formats: { &#34;column&#34;: &#34;column3&#34; } or { &#34;index&#34;: 21 }. In case of mulitple formats, the first one will be picked. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="weight" type="text" label="weight" help="Weight variable from your dataset. You can specify either a column name or a column index. Formats: { &#34;column&#34;: &#34;column3&#34; } or { &#34;index&#34;: 21 }. In case of mulitple formats, the first one will be picked. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="kernel" type="select" label="kernel" help="Specifies the kernel type to be used in the algorithm. " multiple="false">
                  
                    <option value="linear" 
                      
                    >linear
                       - It&#39;s used when the data is Linearly separable; that is; it can be separated using a single Line
                    </option>
                  
                    <option value="poly" 
                      
                    >poly
                       - Represents the similarity of vectors -training samples- in a feature space over polynomials of the original variables; allowing learning of non-linear models
                    </option>
                  
                    <option value="rbf" 
                      selected="true"
                    >rbf
                       - It&#39;s a function whose value depends on the distance from the origin or from some point
                    </option>
                  
                    <option value="sigmoid" 
                      
                    >sigmoid
                       - In Neural Networks field the bipolar sigmoid function is often used as an activation function for artificial neurons
                    </option>
                  
                    <option value="precomputed" 
                      
                    >precomputed
                       - Precomputed kernel
                    </option>
                  
                </param>
            
              <param name="normalize_cm" type="boolean" 
                  
                  label="normalize_cm" help="Whether or not to normalize the confusion matrix." 
                />
            
              <param name="random_state_method" type="integer" 
                  value="5"
                  min="1" max="1000"
                  label="random_state_method" help="Controls the randomness of the estimator." optional="false"/>
            
              <param name="random_state_train_test" type="integer" 
                  value="5"
                  min="1" max="1000"
                  label="random_state_train_test" help="Controls the shuffling applied to the data before applying the split." optional="false"/>
            
              <param name="test_size" type="float" 
                  value="0.2"
                  
                  label="test_size" help="Represents the proportion of the dataset to include in the test split. It should be between 0.0 and 1.0." optional="false"/>
            
              <param name="scale" type="boolean" 
                  
                  label="scale" help="Whether or not to scale the input dataset." 
                />
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_model_path" format="pkl" label="${outname_output_model_path}"/>
        
        
          <data name="output_test_table_path" format="csv" label="${outname_output_test_table_path}"/>
        
        
          <data name="output_plot_path" format="png" label="${outname_output_plot_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_ml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_ml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>