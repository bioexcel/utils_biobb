<tool id="biobb_ml_k_means_ext" name="KMeans" version="3.7.0" >
    <description>: Wrapper of the scikit-learn KMeans method.</description>
    <requirements>
        <requirement type="package"
        version="3.7.0"
        >biobb_ml</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_dataset_path} ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        k_means

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__predictors__dq__:${properties.predictors},__dq__clusters__dq__:${properties.clusters},__dq__plots__dq__:${properties.plots},__dq__random_state_method__dq__:${properties.random_state_method},__dq__scale__dq__:${properties.scale}__cc__'
          #end if
        
          #if str($input_dataset_path) != 'None':
            --input_dataset_path ${input_dataset_path}_`echo $$`.${input_dataset_path.ext}
          #end if
        
        
          --output_results_path $outname_output_results_path
        
          --output_model_path $outname_output_model_path
        
          --output_plot_path $outname_output_plot_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_dataset_path}_`echo $$`.${input_dataset_path.ext};
        
        
          if test -f $outname_output_results_path; then mv $outname_output_results_path $output_results_path; fi;
        
          if test -f $outname_output_model_path; then mv $outname_output_model_path $output_model_path; fi;
        
          if test -f $outname_output_plot_path; then mv $outname_output_plot_path $output_plot_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_dataset_path" type="data" format="csv"  optional="False" label="input CSV file" help="Path to the input dataset. Format: [input].csv"/> 
        
        
          <param name="outname_output_results_path" type="text" value="myk_means.csv" 
              optional="False" label="output CSV name" 
              help="Path to the clustered dataset Format: [output].csv "/>
        
          <param name="outname_output_model_path" type="text" value="myk_means.pkl" 
              optional="False" label="output PKL name" 
              help="Path to the output model file Format: [output].pkl "/>
        
          <param name="outname_output_plot_path" type="text" value="myk_means.png" 
              optional="True" label="output PNG name" 
              help="Path to the clustering plot Format: [output].png "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="predictors" type="text" label="predictors" help="Features or columns from your dataset you want to use for fitting. You can specify either a list of columns names from your input dataset, a list of columns indexes or a range of columns indexes. Formats: { &#34;columns&#34;: [&#34;column1&#34;, &#34;column2&#34;] } or { &#34;indexes&#34;: [0, 2, 3, 10, 11, 17] } or { &#34;range&#34;: [[0, 20], [50, 102]] }. In case of mulitple formats, the first one will be picked. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="clusters" type="integer" 
                  value="3"
                  min="1" max="100"
                  label="clusters" help="The number of clusters to form as well as the number of centroids to generate." optional="false"/>
            
              <param name="plots" type="text" label="plots" help="List of dictionaries with all plots you want to generate. Only 2D or 3D plots accepted. Format: [ { &#39;title&#39;: &#39;Plot 1&#39;, &#39;features&#39;: [&#39;feat1&#39;, &#39;feat2&#39;] } ]. (Json)" value="[]" >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="random_state_method" type="integer" 
                  value="5"
                  min="1" max="1000"
                  label="random_state_method" help="Determines random number generation for centroid initialization." optional="false"/>
            
              <param name="scale" type="boolean" 
                  
                  label="scale" help="Whether or not to scale the input dataset." 
                />
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_results_path" format="csv" label="${outname_output_results_path}"/>
        
        
          <data name="output_model_path" format="pkl" label="${outname_output_model_path}"/>
        
        
          <data name="output_plot_path" format="png" label="${outname_output_plot_path}"/>
        
    </outputs>
    <tests>
        <test>
        
	<param name="input_dataset_path" value="biobb_ml/clustering/dataset_k_means.csv" ftype="csv" />
        
	<param name="predictors" value="{&#39;columns&#39;: [&#39;sepal_length&#39;, &#39;sepal_width&#39;, &#39;petal_length&#39;, &#39;petal_width&#39;]}" ftype="" />
        
	<param name="clusters" value="3" ftype="" />
        
	<param name="plots" value="[{&#39;title&#39;: &#39;Plot 1&#39;, &#39;features&#39;: [&#39;sepal_length&#39;, &#39;sepal_width&#39;]}, {&#39;title&#39;: &#39;Plot 2&#39;, &#39;features&#39;: [&#39;petal_length&#39;, &#39;petal_width&#39;]}, {&#39;title&#39;: &#39;Plot 3&#39;, &#39;features&#39;: [&#39;sepal_length&#39;, &#39;sepal_width&#39;, &#39;petal_length&#39;]}, {&#39;title&#39;: &#39;Plot 4&#39;, &#39;features&#39;: [&#39;petal_length&#39;, &#39;petal_width&#39;, &#39;sepal_width&#39;]}, {&#39;title&#39;: &#39;Plot 5&#39;, &#39;features&#39;: [&#39;sepal_length&#39;, &#39;petal_width&#39;]}]" ftype="" />
        
	<param name="scale" value="True" ftype="" />
        
        
        <output name="output_results_path" file="biobb_ml/clustering/ref_output_results_k_means.csv" />
        
        <output name="output_results_path" file="biobb_ml/sklearn.cluster.KMeans/output_results.csv" />
        
        <output name="output_model_path" file="biobb_ml/clustering/ref_output_model_k_means.pkl" />
        
        <output name="output_model_path" file="biobb_ml/sklearn.cluster.KMeans/output_model.pkl" />
        
        <output name="output_plot_path" file="biobb_ml/clustering/ref_output_plot_k_means.png" />
        
        <output name="output_plot_path" file="biobb_ml/sklearn.cluster.KMeans/output_plot.png" />
        
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_ml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_ml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>