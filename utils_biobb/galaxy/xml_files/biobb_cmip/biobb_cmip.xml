<tool id="biobb_cmip_cmip_ext" name="Cmip" version="3.7.8" >
    <description>: Wrapper class for the CMIP cmip module.</description>
    <requirements>
        <requirement type="package"
        version="3.7.8"
        >biobb_cmip</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_pdb_path} ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          ln -f -s ${input_probe_pdb_path} ${input_probe_pdb_path}_`echo $$`.${input_probe_pdb_path.ext};
        
          ln -f -s ${input_vdw_params_path} ${input_vdw_params_path}_`echo $$`.${input_vdw_params_path.ext};
        
          ln -f -s ${input_params_path} ${input_params_path}_`echo $$`.${input_params_path.ext};
        
          ln -f -s ${input_json_box_path} ${input_json_box_path}_`echo $$`.${input_json_box_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        cmip

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__execution_type__dq__:__dq__${properties.execution_type}__dq__,__dq__box_size_factor__dq__:${properties.box_size_factor},__dq__params__dq__:${properties.params},__dq__binary_path__dq__:__dq__${properties.binary_path}__dq____cc__'
          #end if
        
          #if str($input_pdb_path) != 'None':
            --input_pdb_path ${input_pdb_path}_`echo $$`.${input_pdb_path.ext}
          #end if
        
          #if str($input_probe_pdb_path) != 'None':
            --input_probe_pdb_path ${input_probe_pdb_path}_`echo $$`.${input_probe_pdb_path.ext}
          #end if
        
          #if str($input_vdw_params_path) != 'None':
            --input_vdw_params_path ${input_vdw_params_path}_`echo $$`.${input_vdw_params_path.ext}
          #end if
        
          #if str($input_params_path) != 'None':
            --input_params_path ${input_params_path}_`echo $$`.${input_params_path.ext}
          #end if
        
          #if str($input_json_box_path) != 'None':
            --input_json_box_path ${input_json_box_path}_`echo $$`.${input_json_box_path.ext}
          #end if
        
        
          --output_pdb_path $outname_output_pdb_path
        
          --output_grd_path $outname_output_grd_path
        
          --output_cube_path $outname_output_cube_path
        
          --output_rst_path $outname_output_rst_path
        
          --output_byat_path $outname_output_byat_path
        
          --output_log_path $outname_output_log_path
        
          --output_json_box_path $outname_output_json_box_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          rm -f ${input_probe_pdb_path}_`echo $$`.${input_probe_pdb_path.ext};
        
          rm -f ${input_vdw_params_path}_`echo $$`.${input_vdw_params_path.ext};
        
          rm -f ${input_params_path}_`echo $$`.${input_params_path.ext};
        
          rm -f ${input_json_box_path}_`echo $$`.${input_json_box_path.ext};
        
        
          if test -f $outname_output_pdb_path; then mv $outname_output_pdb_path $output_pdb_path; fi;
        
          if test -f $outname_output_grd_path; then mv $outname_output_grd_path $output_grd_path; fi;
        
          if test -f $outname_output_cube_path; then mv $outname_output_cube_path $output_cube_path; fi;
        
          if test -f $outname_output_rst_path; then mv $outname_output_rst_path $output_rst_path; fi;
        
          if test -f $outname_output_byat_path; then mv $outname_output_byat_path $output_byat_path; fi;
        
          if test -f $outname_output_log_path; then mv $outname_output_log_path $output_log_path; fi;
        
          if test -f $outname_output_json_box_path; then mv $outname_output_json_box_path $output_json_box_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_pdb_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Path to the input PDB file. Format: [input].pdb"/> 
        
          <param name="input_probe_pdb_path" type="data" format="pdb"  optional="True" label="input PDB file" help="Path to the input probe file in PDB format. Format: [input].pdb"/> 
        
          <param name="input_vdw_params_path" type="data" format="txt"  optional="True" label="input TXT file" help="Path to the CMIP input Van der Waals force parameters, if not provided the CMIP conda installation one is used (&#34;$CONDA_PREFIX/share/cmip/dat/vdwprm&#34;). Format: [input].txt"/> 
        
          <param name="input_params_path" type="data" format="txt"  optional="True" label="input TXT file" help="Path to the CMIP input parameters file. Format: [input].txt"/> 
        
          <param name="input_json_box_path" type="data" format="json"  optional="True" label="input JSON file" help="Path to the input CMIP box in JSON format. Format: [input].json"/> 
        
        
          <param name="outname_output_pdb_path" type="text" value="mycmip.pdb" 
              optional="True" label="output PDB name" 
              help="Path to the output PDB file Format: [output].pdb "/>
        
          <param name="outname_output_grd_path" type="text" value="mycmip.grd" 
              optional="True" label="output GRD name" 
              help="Path to the output grid file in GRD format Format: [output].grd "/>
        
          <param name="outname_output_cube_path" type="text" value="mycmip.cube" 
              optional="True" label="output CUBE name" 
              help="Path to the output grid file in cube format Format: [output].cube "/>
        
          <param name="outname_output_rst_path" type="text" value="mycmip.txt" 
              optional="True" label="output TXT name" 
              help="Path to the output restart file Format: [output].txt "/>
        
          <param name="outname_output_byat_path" type="text" value="mycmip.txt" 
              optional="True" label="output TXT name" 
              help="Path to the output atom by atom energy file Format: [output].txt "/>
        
          <param name="outname_output_log_path" type="text" value="mycmip.log" 
              optional="True" label="output LOG name" 
              help="Path to the output CMIP log file LOG Format: [output].log "/>
        
          <param name="outname_output_json_box_path" type="text" value="mycmip.json" 
              optional="True" label="output JSON name" 
              help="Path to the output CMIP box in JSON format Format: [output].json "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="execution_type" type="select" label="execution_type" help="Default options for the params file, each one creates a different params file. " multiple="false">
                  
                    <option value="check_only" 
                      
                    >check_only
                       - Dry Run of CMIP
                    </option>
                  
                    <option value="mip_pos" 
                      selected="true"
                    >mip_pos
                       - MIP O+  Mehler Solmajer dielectric
                    </option>
                  
                    <option value="mip_neg" 
                      
                    >mip_neg
                       - MIP O-  Mehler Solmajer dielectric
                    </option>
                  
                    <option value="mip_neu" 
                      
                    >mip_neu
                       - MIP Oxygen Mehler Solmajer dielectric
                    </option>
                  
                    <option value="solvation" 
                      
                    >solvation
                       - Solvation &amp; MEP
                    </option>
                  
                    <option value="energy" 
                      
                    >energy
                       - Docking Interaction energy calculation. PB electrostatics
                    </option>
                  
                    <option value="docking" 
                      
                    >docking
                       - Docking Mehler Solmajer dielectric
                    </option>
                  
                    <option value="docking_rst" 
                      
                    >docking_rst
                       - Docking from restart file
                    </option>
                  
                </param>
            
              <param name="box_size_factor" type="float" 
                  value="1.0"
                  
                  label="box_size_factor" help="If optional output **output_json_box_path** is used the box size will be multiplied by this factor." optional="false"/>
            
              <param name="params" type="text" label="params" help="CMIP options specification. (Json)" value="{}">
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="binary_path" type="text" label="binary_path" help="Path to the CMIP cmip executable binary." optional="false"
                  value="cmip"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_pdb_path" format="pdb" label="${outname_output_pdb_path}"/>
        
        
          <data name="output_grd_path" format="grd" label="${outname_output_grd_path}"/>
        
        
          <data name="output_cube_path" format="cube" label="${outname_output_cube_path}"/>
        
        
          <data name="output_rst_path" format="txt" label="${outname_output_rst_path}"/>
        
        
          <data name="output_byat_path" format="txt" label="${outname_output_byat_path}"/>
        
        
          <data name="output_log_path" format="log" label="${outname_output_log_path}"/>
        
        
          <data name="output_json_box_path" format="json" label="${outname_output_json_box_path}"/>
        
    </outputs>
    <tests>
        <test>
        
	<param name="input_pdb_path" value="biobb_cmip/cmip/RBD-hACE2.hACE2.cmip.pdb" ftype="pdb" />
        
	<param name="input_probe_pdb_path" value="biobb_cmip/cmip/RBD-hACE2.RBD.cmip.pdb" ftype="pdb" />
        
	<param name="execution_type" value="energy" ftype="" />
        
        
        <output name="output_byat_path" file="biobb_cmip/cmip/RBD.energies.byat.out" />
        
        <output name="output_byat_path" file="biobb_cmip/CMIP cmip/output_byat.out" />
        
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_cmip.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_cmip},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>