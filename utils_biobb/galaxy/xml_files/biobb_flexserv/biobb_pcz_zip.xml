<tool id="biobb_flexserv_pcz_zip_ext" name="PczZip" version="4.0.0" >
    <description>: Wrapper of the pcazip tool from the PCAsuite FlexServ module.</description>
    <requirements>
        <requirement type="package"
        version="4.0.0"
        >biobb_flexserv</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_pdb_path} ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          ln -f -s ${input_crd_path} ${input_crd_path}_`echo $$`.${input_crd_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
        pcz_zip

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__binary_path__dq__:__dq__${properties.binary_path}__dq__,__dq__neigenv__dq__:${properties.neigenv},__dq__variance__dq__:${properties.variance},__dq__verbose__dq__:${properties.verbose},__dq__gauss_rmsd__dq__:${properties.gauss_rmsd}__cc__'
          #end if
        
          #if str($input_pdb_path) != 'None':
            --input_pdb_path ${input_pdb_path}_`echo $$`.${input_pdb_path.ext}
          #end if
        
          #if str($input_crd_path) != 'None':
            --input_crd_path ${input_crd_path}_`echo $$`.${input_crd_path.ext}
          #end if
        
        
          --output_pcz_path $outname_output_pcz_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_pdb_path}_`echo $$`.${input_pdb_path.ext};
        
          rm -f ${input_crd_path}_`echo $$`.${input_crd_path.ext};
        
        
          if test -f $outname_output_pcz_path; then mv $outname_output_pcz_path $output_pcz_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_pdb_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Input PDB file. Format: [input].pdb"/> 
        
          <param name="input_crd_path" type="data" format="crd,mdcrd,inpcrd"  optional="False" label="input CRD,MDCRD,INPCRD file" help="Input Trajectory file. Format: [input].[format]"/> 
        
        
          <param name="outname_output_pcz_path" type="text" value="mypcz_zip.pcz" 
              optional="False" label="output PCZ name" 
              help="Output compressed trajectory Format: [output].pcz "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="binary_path" type="text" label="binary_path" help="pcazip binary path to be used." optional="false"
                  value="pcazip"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
              <param name="neigenv" type="integer" 
                  value="0"
                  
                  label="neigenv" help="Number of generated eigenvectors" optional="true"/>
            
              <param name="variance" type="integer" 
                  value="90"
                  
                  label="variance" help="Percentage of variance captured by the final set of eigenvectors" optional="false"/>
            
              <param name="verbose" type="boolean" 
                  
                  label="verbose" help="Make output verbose" 
                />
            
              <param name="gauss_rmsd" type="boolean" 
                  
                  label="gauss_rmsd" help="Use a gaussian RMSd for fitting" 
                />
                    
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_pcz_path" format="pcz" label="${outname_output_pcz_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_flexserv.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_flexserv},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>