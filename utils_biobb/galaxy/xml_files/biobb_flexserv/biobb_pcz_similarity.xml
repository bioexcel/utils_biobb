<tool id="biobb_flexserv_pcz_similarity_ext" name="PczSimilarity" version="4.0.3" >
    <description>: Compute PCA similarity between two given compressed PCZ files.</description>
    <requirements>
        <requirement type="package"
        version="4.0.3"
        >biobb_flexserv</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_pcz_path1} ${input_pcz_path1}_`echo $$`.${input_pcz_path1.ext};
        
          ln -f -s ${input_pcz_path2} ${input_pcz_path2}_`echo $$`.${input_pcz_path2.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if

        pcz_similarity

        #if $config.sele == "option1":
            --config ${config.properties}_`echo $$`.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__amplifying_factor__dq__:${properties.amplifying_factor},__dq__binary_path__dq__:__dq__${properties.binary_path}__dq____cc__'
          #end if
        
          #if str($input_pcz_path1) != 'None':
            --input_pcz_path1 ${input_pcz_path1}_`echo $$`.${input_pcz_path1.ext}
          #end if
        
          #if str($input_pcz_path2) != 'None':
            --input_pcz_path2 ${input_pcz_path2}_`echo $$`.${input_pcz_path2.ext}
          #end if
        
        
          --output_json_path $outname_output_json_path
        ;
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_pcz_path1}_`echo $$`.${input_pcz_path1.ext};
        
          rm -f ${input_pcz_path2}_`echo $$`.${input_pcz_path2.ext};
        
        
          if test -f $outname_output_json_path; then mv $outname_output_json_path $output_json_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_pcz_path1" type="data" format="pcz"  optional="False" label="input PCZ file" help="Input compressed trajectory file 1. Format: [input].pcz"/>
        
          <param name="input_pcz_path2" type="data" format="pcz"  optional="False" label="input PCZ file" help="Input compressed trajectory file 2. Format: [input].pcz"/>
        
        
          <param name="outname_output_json_path" type="text" value="mypcz_similarity.json"
              optional="False" label="output JSON name"
              help="Output json file with PCA Similarity results Format: [output].json "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="amplifying_factor" type="float"
                  value="0.0"
                  
                  label="amplifying_factor" help="common displacement (dx) along the different eigenvectors. If 0, the result is the absolute similarity index (dot product)." optional="true"/>
            
              <param name="binary_path" type="text" label="binary_path" help="pczdump binary path to be used." optional="false"
                  value="pczdump"
                >
                  <sanitizer><valid initial="string.printable"/></sanitizer>
                </param>
            
          </section>
    </inputs>
    <outputs>
        
        
          <data name="output_json_path" format="json" label="${outname_output_json_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
.. class:: infomark

Check the syntax for the tool parameters at the original library documentation: https://biobb_flexserv.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png
    :width: 150

**https://mmb.irbbarcelona.org/biobb**

.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150

**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_flexserv},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>