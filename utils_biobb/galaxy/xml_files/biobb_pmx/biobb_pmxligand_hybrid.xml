<tool id="biobb_pmx_pmxligand_hybrid_ext" name="PmxligandHybrid" version="4.0.0" >
    <description>: Wrapper class for the PMX ligand_hybrid module.</description>
    <requirements>
        <requirement type="package"
        version="4.0.0"
        >biobb_pmx</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_structure1_path} ${input_structure1_path}_`echo $$`.${input_structure1_path.ext};
        
          ln -f -s ${input_structure2_path} ${input_structure2_path}_`echo $$`.${input_structure2_path.ext};
        
          ln -f -s ${input_topology1_path} ${input_topology1_path}_`echo $$`.${input_topology1_path.ext};
        
          ln -f -s ${input_topology2_path} ${input_topology2_path}_`echo $$`.${input_topology2_path.ext};
        
          ln -f -s ${input_pairs_path} ${input_pairs_path}_`echo $$`.${input_pairs_path.ext};
        
          ln -f -s ${input_scaffold1_path} ${input_scaffold1_path}_`echo $$`.${input_scaffold1_path.ext};
        
          ln -f -s ${input_scaffold2_path} ${input_scaffold2_path}_`echo $$`.${input_scaffold2_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}_`echo $$`.${config.properties.ext};
          #end if

        pmxligand_hybrid

        #if $config.sele == "option1":
            --config ${config.properties}_`echo $$`.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config '__oc____dq__fit__dq__:${properties.fit},__dq__split__dq__:${properties.split},__dq__scDUMm__dq__:${properties.scDUMm},__dq__scDUMa__dq__:${properties.scDUMa},__dq__scDUMd__dq__:${properties.scDUMd},__dq__deAng__dq__:${properties.deAng},__dq__distance__dq__:${properties.distance}__cc__'
          #end if
        
          #if str($input_structure1_path) != 'None':
            --input_structure1_path ${input_structure1_path}_`echo $$`.${input_structure1_path.ext}
          #end if
        
          #if str($input_structure2_path) != 'None':
            --input_structure2_path ${input_structure2_path}_`echo $$`.${input_structure2_path.ext}
          #end if
        
          #if str($input_topology1_path) != 'None':
            --input_topology1_path ${input_topology1_path}_`echo $$`.${input_topology1_path.ext}
          #end if
        
          #if str($input_topology2_path) != 'None':
            --input_topology2_path ${input_topology2_path}_`echo $$`.${input_topology2_path.ext}
          #end if
        
          #if str($input_pairs_path) != 'None':
            --input_pairs_path ${input_pairs_path}_`echo $$`.${input_pairs_path.ext}
          #end if
        
          #if str($input_scaffold1_path) != 'None':
            --input_scaffold1_path ${input_scaffold1_path}_`echo $$`.${input_scaffold1_path.ext}
          #end if
        
          #if str($input_scaffold2_path) != 'None':
            --input_scaffold2_path ${input_scaffold2_path}_`echo $$`.${input_scaffold2_path.ext}
          #end if
        
        
          --output_log_path $outname_output_log_path
        
          --output_structure1_path $outname_output_structure1_path
        
          --output_structure2_path $outname_output_structure2_path
        
          --output_topology_path $outname_output_topology_path
        
          --output_atomtypes_path $outname_output_atomtypes_path
        ;
        #if $config.sele == "option1":
            rm -f ${config.properties}_`echo $$`.${config.properties.ext};
          #end if
        
          rm -f ${input_structure1_path}_`echo $$`.${input_structure1_path.ext};
        
          rm -f ${input_structure2_path}_`echo $$`.${input_structure2_path.ext};
        
          rm -f ${input_topology1_path}_`echo $$`.${input_topology1_path.ext};
        
          rm -f ${input_topology2_path}_`echo $$`.${input_topology2_path.ext};
        
          rm -f ${input_pairs_path}_`echo $$`.${input_pairs_path.ext};
        
          rm -f ${input_scaffold1_path}_`echo $$`.${input_scaffold1_path.ext};
        
          rm -f ${input_scaffold2_path}_`echo $$`.${input_scaffold2_path.ext};
        
        
          if test -f $outname_output_log_path; then mv $outname_output_log_path $output_log_path; fi;
        
          if test -f $outname_output_structure1_path; then mv $outname_output_structure1_path $output_structure1_path; fi;
        
          if test -f $outname_output_structure2_path; then mv $outname_output_structure2_path $output_structure2_path; fi;
        
          if test -f $outname_output_topology_path; then mv $outname_output_topology_path $output_topology_path; fi;
        
          if test -f $outname_output_atomtypes_path; then mv $outname_output_atomtypes_path $output_atomtypes_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_structure1_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Path to the input ligand structure file 1. Format: [input].pdb"/>
        
          <param name="input_structure2_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Path to the input ligand structure file 2. Format: [input].pdb"/>
        
          <param name="input_topology1_path" type="data" format="itp"  optional="False" label="input ITP file" help="Path to the input ligand topology file 1. Format: [input].itp"/>
        
          <param name="input_topology2_path" type="data" format="itp"  optional="False" label="input ITP file" help="Path to the input ligand topology file 2. Format: [input].itp"/>
        
          <param name="input_pairs_path" type="data" format="dat,txt"  optional="True" label="input DAT,TXT file" help="Path to the input atom pair mapping. Format: [input].[format]"/>
        
          <param name="input_scaffold1_path" type="data" format="ndx"  optional="True" label="input NDX file" help="Path to the index of atoms to consider for the ligand structure 1. Format: [input].ndx"/>
        
          <param name="input_scaffold2_path" type="data" format="ndx"  optional="True" label="input NDX file" help="Path to the index of atoms to consider for the ligand structure 2. Format: [input].ndx"/>
        
        
          <param name="outname_output_log_path" type="text" value="mypmxligand_hybrid.log"
              optional="False" label="output LOG,TXT,OUT name"
              help="Path to the log file Format: [output].[format] "/>
        
          <param name="outname_output_structure1_path" type="text" value="mypmxligand_hybrid.pdb"
              optional="False" label="output PDB name"
              help="Path to the output hybrid structure based on the ligand 1 Format: [output].pdb "/>
        
          <param name="outname_output_structure2_path" type="text" value="mypmxligand_hybrid.pdb"
              optional="False" label="output PDB name"
              help="Path to the output hybrid structure based on the ligand 2 Format: [output].pdb "/>
        
          <param name="outname_output_topology_path" type="text" value="mypmxligand_hybrid.itp"
              optional="False" label="output ITP name"
              help="Path to the output hybrid topology Format: [output].itp "/>
        
          <param name="outname_output_atomtypes_path" type="text" value="mypmxligand_hybrid.itp"
              optional="False" label="output ITP name"
              help="Path to the atom types for the output hybrid topology Format: [output].itp "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
              <option value="option3">Manual Input</option>
              <option value="option1">from configuration file</option>
              <option value="option2">from JSON string</option>
            </param>
            <when value="option1">
              <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
              <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
          </conditional>
          <section name="properties" title="Properties Input">
            
              <param name="fit" type="boolean"
                  
                  label="fit" help="Fit ligand structure 1 onto ligand structure 2 (Only used if input_pairs_path is provided)."
                />
            
              <param name="split" type="boolean"
                  
                  label="split" help="Split the topology into separate transitions."
                />
            
              <param name="scDUMm" type="float"
                  value="1.0"
                  
                  label="scDUMm" help="Scale dummy masses using the counterpart atoms." optional="false"/>
            
              <param name="scDUMa" type="float"
                  value="1.0"
                  
                  label="scDUMa" help="Scale bonded dummy angle parameters." optional="false"/>
            
              <param name="scDUMd" type="float"
                  value="1.0"
                  
                  label="scDUMd" help="Scale bonded dummy dihedral parameters." optional="false"/>
            
              <param name="deAng" type="boolean"
                  
                  label="deAng" help="Decouple angles composed of 1 dummy and 2 non-dummies."
                />
            
              <param name="distance" type="float"
                  value="0.05"
                  
                  label="distance" help="Distance (nm) between atoms to consider them morphable for alignment approach (Only used if input_pairs_path is not provided)." optional="false"/>
            
              <param name="output_format" type="select" label="output_format" help="Format of the output file" multiple="false">
                  
                    <option value="log"
                      
                    >log
                       
                    </option>
                  
                    <option value="txt"
                      
                    >txt
                       
                    </option>
                  
                    <option value="out"
                      
                    >out
                       
                    </option>
                  
                </param>
            
          </section>
    </inputs>
    <outputs>
        
        <data name="output_log_path" format="text" label="${outname_output_log_path}">
            <change_format>
            
            <when input="properties.output_format" value="log" format="log" />
            
            <when input="properties.output_format" value="txt" format="txt" />
            
            <when input="properties.output_format" value="out" format="out" />
            
            </change_format>
          </data>
        
        
          <data name="output_structure1_path" format="pdb" label="${outname_output_structure1_path}"/>
        
        
          <data name="output_structure2_path" format="pdb" label="${outname_output_structure2_path}"/>
        
        
          <data name="output_topology_path" format="itp" label="${outname_output_topology_path}"/>
        
        
          <data name="output_atomtypes_path" format="itp" label="${outname_output_atomtypes_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
.. class:: infomark

Check the syntax for the tool parameters at the original library documentation: https://biobb_pmx.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png
    :width: 150

**https://mmb.irbbarcelona.org/biobb**

.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150

**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_pmx},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>